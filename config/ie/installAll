#!/usr/bin/env iePython2.7

import IEEnv
import os, sys, subprocess

def build( extraArgs = [] ) :
	
	buildArgs = [ "scons" ]
	buildArgs.append( "install" if "RELEASE=1" in sys.argv[1:] else "build" )
	buildArgs.extend( extraArgs )
	buildArgs.extend( sys.argv[1:] )
	
	print " ".join( buildArgs )
	if subprocess.call( buildArgs ) != 0 :
	
		raise RuntimeError( "Error : " + " ".join( buildArgs ) )

if IEEnv.platform() in ( "cent7.x86_64" ) :

	# fetch at least one active version of each renderer
	aiVersion = IEEnv.activeVersions( IEEnv.registry["apps"]["arnold"] )[-1]
	dlVersion = IEEnv.activeVersions( IEEnv.registry["apps"]["3delight"] )[-1]
	appleseedVersion = IEEnv.activeVersions( IEEnv.registry["apps"]["appleseed"] )[-1]
	
	extraArgs = [ "ARNOLD_VERSION="+aiVersion, "APPLESEED_VERSION="+appleseedVersion, "DL_VERSION="+dlVersion ]
	
	# standalone build
	build( extraArgs )
	
	# app specific builds
	for app in ( "maya", "houdini", "nuke" ) :
		for version in IEEnv.activeAppVersions( app ) :
			build( [ "APP=" + app, "APP_VERSION=" + version ] + extraArgs )
			
else :

	raise RuntimeError( "Unknown platform" )
