import Gaffer
import IECore

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 14, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["testPlug"] = Gaffer.FloatPlug( "testPlug", defaultValue = 2.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["testPlug"] )
Gaffer.Metadata.registerPlugValue( parent["user"], "layout:section", IECore.StringData( 'User' ) )
Gaffer.Metadata.registerPlugValue( __children["testPlug"], "nodule:type", IECore.StringData( '' ) )
Gaffer.Metadata.registerPlugValue( __children["testPlug"], "layout:section", IECore.StringData( 'Settings' ) )
Gaffer.Metadata.registerPlugValue( __children["testPlug"], "layout:index", IECore.IntData( 0 ) )
Gaffer.Metadata.registerNodeValue( parent, "uiEditor:emptySections", IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerNodeValue( parent, "uiEditor:emptySectionIndices", IECore.IntVectorData( [  ] ) )


del __children

