import Gaffer
import IECore

__children = {}

__children["n"] = Gaffer.Node( "n" )
parent.addChild( __children["n"] )
__children["n"]["user"].addChild( Gaffer.IntPlug( "i", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["n"]["user"]["i"].setValue( 2 )
__children["n"]["user"].addChild( Gaffer.IntPlug( "o", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["e"] = Gaffer.Expression( "e" )
parent.addChild( __children["e"] )
__children["e"].addChild( Gaffer.CompoundPlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["e"]["in"].addChild( Gaffer.IntPlug( "plug", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["e"].addChild( Gaffer.IntPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["n"]["user"]["o"].setInput( __children["e"]["out"] )
__children["e"]["in"].setInput( __children["n"]["user"] )
__children["e"]["in"]["plug"].setInput( __children["n"]["user"]["i"] )
__children["e"]["expression"].setValue( "parent['n']['user']['o'] = parent['n']['user']['i'] * int( context.getFrame() )" )


del __children

